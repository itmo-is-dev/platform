name: "publish packages"

on:
  push:
    branches: [ "chore/publish-new" ]
    paths:
      - 'src/**'
      - '.github/workflows/publish-new*'
      - '*.props'
      - '!samples'

jobs:
  find-changed-packages:
    name: "find changed packages"
    runs-on: ubuntu-latest
    
    outputs:
      packages: ${{ steps.find-changed-package-projects.outputs.changed-package-projects }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: find package projects
        id: find-package-projects
        run: |
          package_projects=$(.github/workflows/publish-new-find-package-projects.sh)
          package_projects=$(echo "$package_projects" | jq --raw-input --slurp 'split("\n") | map(select(. != ""))')
          package_projects=$(echo "$package_projects" | tr -d '\n')
          
          echo package-projects="$package_projects" >> "$GITHUB_OUTPUT"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: find changed package projects
        id: find-changed-package-projects
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          PACKAGE_PROJECTS_JSON: ${{ steps.find-package-projects.outputs.package-projects }}
        run: |
          changed_package_projects=$(.github/workflows/publish-new-find-changed-packages.sh | tr ' ' '\n')
          changed_package_projects=$(echo "$changed_package_projects" | jq --raw-input --slurp 'split("\n") | map(select(. != ""))')
          changed_package_projects=$(echo "$changed_package_projects" | tr -d '\n')
          
          echo changed-package-projects="$changed_package_projects" >> "$GITHUB_OUTPUT"
  
  
  publish-package:
    name: ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: find-changed-packages
    
    if: ${{
      needs.find-changed-packages.outputs.packages != '[]'
      && needs.find-changed-packages.outputs.packages != ''
      }}
    
    strategy:
      matrix:
        package: ${{ fromJSON(needs.find-changed-packages.outputs.packages) }}
    
    steps:
      - uses: actions/checkout@v4

      - name: write
        run: |
          echo ${{ matrix.package }}